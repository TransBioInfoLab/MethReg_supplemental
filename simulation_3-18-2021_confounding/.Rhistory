library(pROC)
computePRS <- function (betaMat, sigCpGs, weight, pheno, groupVar, binaryPheno){
both <- intersect(row.names(betaMat), sigCpGs)
betas_sig <- betaMat[both,]
weight <- weight[weight$cpg %in% both,]
prs <- data.frame (score = t(betas_sig) %*% weight$wt )
prs$sample <- row.names(prs)
prs_pheno <- merge (prs, pheno, by = "sample")
print (hist(prs_pheno$score))
f <- summary(
lm (
as.formula (
paste ("score ~ ",  groupVar)),
data = prs_pheno
)
)
print (f)
prs_pheno$group <- as.factor(prs_pheno[, groupVar])
p <- ggplot(prs_pheno, aes(x = group, y = score)) + geom_boxplot() +
theme_bw()
print (p)
if (binaryPheno == TRUE) {
print (wilcox.exact (
as.formula (paste ("score ~ ",  groupVar)),
data = prs_pheno
)
)
# roc curve & auc
res <- roc (response = prs_pheno[, groupVar], prs_pheno$score,
auc = TRUE, plot = TRUE, print.auc=TRUE, grid = TRUE)
print (res)
}
prs_pheno
}
resBlood <- read_csv("C:/Users/lxw391/Dropbox (BBSR)/AD-meta-analysis-blood-samples/analysis_results/meta_analysis/Logistic_regression_model/AD_vs_CN/meta_analysis_glm_considering_random_pval_ADNI_and_AIBL_AD_vs_CN_single_cpg_annotated_pvalue_cut_off_0_05.csv")
weightInfo <- data.frame (cpg = resBlood$cpg, wt = resBlood$estimate.bacon)
res_1Eneg5 <- subset(resBlood, resBlood$pVal.random.bacon < 1E-5)
res_p_0_05 <- subset(resBlood, resBlood$pVal.random.bacon < 0.05)
addNeuroMed_QNBMIQ_PCfiltered <- readRDS("C:/Users/lxw391/Dropbox (BBSR)/AD-meta-analysis-blood-samples/datasets/AddNeuroMed/step3_pca_filtering/addNeuroMed_QNBMIQ_PCfiltered.RDS")
betasAddNeuroMed <- readRDS("C:/Users/lxw391/Dropbox (BBSR)/AD-meta-analysis-blood-samples/datasets/AddNeuroMed/step3_pca_filtering/addNeuroMed_QNBMIQ_PCfiltered.RDS")
addNeuroMed_QNBMIQ_PCfiltered <- readRDS("C:/Users/lxw391/Dropbox (BBSR)/AD-meta-analysis-blood-samples/datasets/AddNeuroMed/step3_pca_filtering/addNeuroMed_QNBMIQ_PCfiltered.RDS")
betasAddNeuroMed <- assay (addNeuroMed_QNBMIQ_PCfiltered)
betasAddNeuroMed[1:5, 1:5]
samples.info <- read.csv("C:/Users/lxw391/Dropbox (BBSR)/AD-meta-analysis-blood-samples/datasets/AddNeuroMed/step2_processed/samples.info.csv", header=FALSE)
View(samples.info)
library(readr)
samples_info <- read_csv("C:/Users/lxw391/Dropbox (BBSR)/AD-meta-analysis-blood-samples/datasets/AddNeuroMed/step2_processed/samples.info.csv")
View(samples_info)
phenoAddNeuroMed <- read_csv("C:/Users/lxw391/Dropbox (BBSR)/AD-meta-analysis-blood-samples/datasets/AddNeuroMed/step2_processed/samples.info.csv")
resBlood <- read_csv("C:/Users/lxw391/Dropbox (BBSR)/AD-meta-analysis-blood-samples/analysis_results/meta_analysis/Logistic_regression_model/AD_vs_CN/meta_analysis_glm_considering_random_pval_ADNI_and_AIBL_AD_vs_CN_single_cpg_annotated_pvalue_cut_off_0_05.csv")
weightInfoBlood <- data.frame (cpg = resBlood$cpg, wt = resBlood$estimate.bacon)
blood_1Eneg5 <- subset(resBlood, resBlood$pVal.random.bacon < 1E-5)
blood_p_0_05 <- subset(resBlood, resBlood$pVal.random.bacon < 0.05)
prs_adniBloodSmaples_BloodCpgs1Eneg5 <- computePRS (betaMat = betasAdni,
sigCpGs  = blood_1Eneg5$cpg,
weight = weightInfoBlood,
pheno = phenoAD_CN,
groupVar = "DX",
binaryPheno = TRUE)
betaMat = betasAdni
betasAdni <- assay(adni.se.3751)
View(phenoAddNeuroMed)
table (phenoAddNeuroMed$disease.state.ch1)
View(phenoAddNeuroMed)
colnames(phenoAddNeuroMed)
phenoAddNeuroMed$sample <- phenoAddNeuroMed$geo_accession
phenoAD_CN <- subset (phenoAddNeuroMed,
phenoAddNeuroMed$disease.state.ch1 %in% c("control", "Alzheimer's disease"),
select = c(sample, disease.state.ch1))
View(phenoAD_CN)
betasAddNeuroMed<- betasAddNeuroMed[ , phenoAD_CN$sample]
betasAddNeuroMed[1:5, 1:5]
phenoAD_CN[1:5,]
betasAddNeuroMed<- betasAddNeuroMed[ , colnames(betasAddNeuroMed)%in% phenoAD_CN$sample]
weightInfo <- data.frame (cpg = res$cpg, wt = res$estimate)
resBlood <- read_csv("C:/Users/lxw391/Dropbox (BBSR)/AD-meta-analysis-blood-samples/analysis_results/meta_analysis/Logistic_regression_model/AD_vs_CN/meta_analysis_glm_considering_random_pval_ADNI_and_AIBL_AD_vs_CN_single_cpg_annotated_pvalue_cut_off_0_05.csv")
weightInfoBlood <- data.frame (cpg = resBlood$cpg, wt = resBlood$estimate.bacon)
blood_1Eneg5 <- subset(resBlood, resBlood$pVal.random.bacon < 1E-5)
blood_p_0_05 <- subset(resBlood, resBlood$pVal.random.bacon < 0.05)
prs_adniBloodSmaples_brainBaconCpgs <- computePRS  (betaMat = betasAdni,
sigCpGs  = resBlood$cpg,
weight = weightInfoBlood,
pheno = phenoAD_CN,
groupVar = "disease.state.ch1",
binaryPheno = TRUE)
prs_adniBloodSmaples_brainBaconCpgs <- computePRS  (betaMat = betasAddNeuroMed,
sigCpGs  = resBlood$cpg,
weight = weightInfoBlood,
pheno = phenoAD_CN,
groupVar = "disease.state.ch1",
binaryPheno = TRUE)
library (exactRankTests)
prs_adniBloodSmaples_brainBaconCpgs <- computePRS  (betaMat = betasAddNeuroMed,
sigCpGs  = resBlood$cpg,
weight = weightInfoBlood,
pheno = phenoAD_CN,
groupVar = "disease.state.ch1",
binaryPheno = TRUE)
prs_AddNeuroMedBloodSamples_BloodCpGs1Eneg5 <- computePRS  (betaMat = betasAddNeuroMed,
sigCpGs  = blood_1Eneg5$cpg,
weight = weightInfoBlood,
pheno = phenoAD_CN,
groupVar = "disease.state.ch1",
binaryPheno = TRUE)
prs_AddNeuroMedBloodSamples_BloodCpGsP_0_05 <- computePRS  (betaMat = betasAddNeuroMed,
sigCpGs  = resBlood$cpg,
weight = weightInfoBlood,
pheno = phenoAD_CN,
groupVar = "disease.state.ch1",
binaryPheno = TRUE)
table(phenoAddNeuroMed$disease.state.ch1)
# MCI vs. CN
phenoMCI_CN <- subset (phenoAddNeuroMed,
phenoAddNeuroMed$disease.state.ch1 %in% c("control", "mild cognitive impairment"),
select = c(sample, disease.state.ch1))
betasAddNeuroMed<- betasAddNeuroMed[ , colnames(betasAddNeuroMed)%in% phenoMCI_CN$sample]
prs <- computePRS  (betaMat = betasAddNeuroMed,
sigCpGs  = resBlood$cpg,
weight = weightInfoBlood,
pheno = phenoMCI_CN,
groupVar = "disease.state.ch1",
binaryPheno = TRUE)
betasAddNeuroMed<- betasAddNeuroMed[ , colnames(betasAddNeuroMed)%in% phenoMCI_CN$sample]
dim(betasAddNeuroMed)
betaMat = betasAddNeuroMed
sigCpGs  = resBlood$cpg
weight = weightInfoBlood
pheno = phenoMCI_CN
View(phenoMCI_CN)
betasAddNeuroMed <- assay (addNeuroMed_QNBMIQ_PCfiltered)
betasAddNeuroMed<- betasAddNeuroMed[ , colnames(betasAddNeuroMed)%in% phenoMCI_CN$sample]
dim(betasAddNeuroMed)
prs <- computePRS  (betaMat = betasAddNeuroMed,
sigCpGs  = resBlood$cpg,
weight = weightInfoBlood,
pheno = phenoMCI_CN,
groupVar = "disease.state.ch1",
binaryPheno = TRUE)
View(phenoAddNeuroMed)
phenoMCI <- subset(phenoAddNeuroMed, select = c(sample, disease.state.ch2))
colnames(phenoAddNeuroMed)
phenoMCI <- subset(phenoAddNeuroMed, select = c(sample, disease.state.ch1, disease.state2.ch1))
pheno <- subset(phenoAddNeuroMed, select = c(sample, disease.state.ch1, disease.state2.ch1))
table (pheno$disease.state.ch1, pheno$disease.state2.ch1)
pheno <- subset (phenoAddNeuroMed,disease.state.ch1 == "mild cognitive impairment" )
phenoMCI <- subset (phenoAddNeuroMed,disease.state.ch1 == "mild cognitive impairment",
select = c(sample,  disease.state2.ch1)
)
View(phenoMCI)
table (phenoMCI$disease.state2.ch1)
phenoMCI <- phenoMCI [!phenoMCI$disease.state2.ch1 == "unknown" ,]
table (phenoMCI$disease.state2.ch1)
computePRS  (betaMat = betasAddNeuroMed,
sigCpGs  = resBlood$cpg,
weight = weightInfoBlood,
pheno = phenoMCI,
groupVar = "disease.state2.ch1",
binaryPheno = TRUE)
prs <- computePRS  (betaMat = betasAddNeuroMed,
sigCpGs  = resBlood$cpg,
weight = weightInfoBlood,
pheno = phenoMCI,
groupVar = "disease.state2.ch1",
binaryPheno = TRUE)
prs <- computePRS  (betaMat = betasAddNeuroMed,
sigCpGs  = blood_1Eneg5$cpg,
weight = weightInfoBlood,
pheno = phenoMCI,
groupVar = "disease.state2.ch1",
binaryPheno = TRUE)
View(resBlood)
resBlood$zvalue <- resBlood$estimate.bacon/resBlood$se.bacon
resBlood$zvalue <- resBlood$estimate.bacon/resBlood$se.bacon
weightInfoBlood <- data.frame (cpg = resBlood$cpg, wt = resBlood$zvalue)
blood_1Eneg5 <- subset(resBlood, resBlood$pVal.random.bacon < 1E-5)
blood_p_0_05 <- subset(resBlood, resBlood$pVal.random.bacon < 0.05)
betasLondonBlood <- readRDS("C:/Users/lxw391/Dropbox (BBSR)/AD-meta-analysis-blood-samples/LW/PRS/London_QNBMIQ_PCfiltered_withStatusExclude.RDS")
phenoBlood <- readRDS("C:/Users/lxw391/Dropbox (BBSR)/AD-meta-analysis-blood-samples/LW/PRS/pheno_withStatusExclude_df.RDS")
phenoBlood <- subset (phenoBlood, !phenoBlood$status == "Exclude" )
phenoBlood <- readRDS("C:/Users/lxw391/Dropbox (BBSR)/AD-meta-analysis-blood-samples/LW/PRS/pheno_withStatusExclude_df.RDS")
phenoBlood <- subset (phenoBlood, !phenoBlood$status == "Exclude" )
prs_LondonBrain_BloodCpgs1Eneg5 <- computePRS (betaMat = betasLondonBlood,
sigCpGs  = blood_1Eneg5$cpg,
weight = weightInfo,
pheno = phenoBlood,
groupVar = "stage",
binaryPheno = FALSE)
prs_LondonBrain_BloodCpgs1Eneg5 <- computePRS (betaMat = betasLondonBlood,
sigCpGs  = blood_1Eneg5$cpg,
weight = weightInfo,
pheno = phenoBlood,
groupVar = "status",
binaryPheno = TRUE)
prs <- computePRS (betaMat = betasLondonBlood,
sigCpGs  = blood_p_0_05$cpg,
weight = weightInfo,
pheno = phenoBlood,
groupVar = "status",
binaryPheno = TRUE)
prs_AddNeuroMedBloodSamples_BloodCpGsP_0_05 <- computePRS  (betaMat = betasAddNeuroMed,
sigCpGs  = resBlood$cpg,
weight = weightInfoBlood,
pheno = phenoAD_CN,
groupVar = "disease.state.ch1",
binaryPheno = TRUE)
addNeuroMed_QNBMIQ_PCfiltered <- readRDS("C:/Users/lxw391/Dropbox (BBSR)/AD-meta-analysis-blood-samples/datasets/AddNeuroMed/step3_pca_filtering/addNeuroMed_QNBMIQ_PCfiltered.RDS")
betasAddNeuroMed <- assay (addNeuroMed_QNBMIQ_PCfiltered)
phenoAddNeuroMed <- read_csv("C:/Users/lxw391/Dropbox (BBSR)/AD-meta-analysis-blood-samples/datasets/AddNeuroMed/step2_processed/samples.info.csv")
phenoAddNeuroMed$sample <- phenoAddNeuroMed$geo_accession
phenoAD_CN <- subset (phenoAddNeuroMed,
phenoAddNeuroMed$disease.state.ch1 %in% c("control", "Alzheimer's disease"),
select = c(sample, disease.state.ch1))
betasAddNeuroMed<- betasAddNeuroMed[ , colnames(betasAddNeuroMed)%in% phenoAD_CN$sample]
prs_AddNeuroMedBloodSamples_BloodCpGsP_0_05 <- computePRS  (betaMat = betasAddNeuroMed,
sigCpGs  = resBlood$cpg,
weight = weightInfoBlood,
pheno = phenoAD_CN,
groupVar = "disease.state.ch1",
binaryPheno = TRUE)
View(weightInfoBlood)
# MCI vs. CN
phenoMCI_CN <- subset (phenoAddNeuroMed,
phenoAddNeuroMed$disease.state.ch1 %in% c("control", "mild cognitive impairment"),
select = c(sample, disease.state.ch1))
betasAddNeuroMed <- assay (addNeuroMed_QNBMIQ_PCfiltered)
betasAddNeuroMed<- betasAddNeuroMed[ , colnames(betasAddNeuroMed)%in% phenoMCI_CN$sample]
prs <- computePRS  (betaMat = betasAddNeuroMed,
sigCpGs  = resBlood$cpg,
weight = weightInfoBlood,
pheno = phenoMCI_CN,
groupVar = "disease.state.ch1",
binaryPheno = TRUE)
phenoMCI <- subset (phenoAddNeuroMed,disease.state.ch1 == "mild cognitive impairment",
select = c(sample,  disease.state2.ch1)
)
table (phenoMCI$disease.state2.ch1)
phenoMCI <- phenoMCI [!phenoMCI$disease.state2.ch1 == "unknown" ,]
prs <- computePRS  (betaMat = betasAddNeuroMed,
sigCpGs  = blood_1Eneg5$cpg,
weight = weightInfoBlood,
pheno = phenoMCI,
groupVar = "disease.state2.ch1",
binaryPheno = TRUE)
weightInfoBlood <- data.frame (cpg = resBlood$cpg, wt = resBlood$estimate.bacon)
prs <- computePRS (betaMat = betasLondonBlood,
sigCpGs  = blood_1Eneg5$cpg,
weight = weightInfo,
pheno = phenoBlood,
groupVar = "status",
binaryPheno = TRUE)
prs <- computePRS (betaMat = betasLondonBlood,
sigCpGs  = blood_p_0_05$cpg,
weight = weightInfo,
pheno = phenoBlood,
groupVar = "status",
binaryPheno = TRUE)
View(prs)
head(prs)
summary(glm (status ~ score + sex + age.blood, family = binomial))
summary(glm (status ~ score + sex + age.blood, data = prs, family = binomial))
str(prs)
mode <- glm (status ~ score + sex + age.blood, data = prs, family = binomial)
prs$y <- ifelse (prs$status == "AD", 1, 0)
summary(
glm (y ~ score + sex + age.blood, data = prs, family = binomial)
)
summary(
glm (y ~ score , data = prs, family = binomial)
)
f <- glm (y ~ score + sex + age.blood, data = prs, family = binomial)
anova(f)
g <- glm (y ~  sex + age.blood, data = prs, family = binomial)
anova(f, g)
anova(f, g, test = "LRT")
summary(f)
g <- glm (y ~  sex + age.blood, data = prs, family = binomial)
anova(f, g, test = "LRT")
setwd("C:/Users/lxw391/Dropbox (BBSR)/Draft_TF/simulation_3-18-2021_addMetTF")
library (MASS)
library (ggplot2)
library (dplyr)
library (tidyr)
library (pROC)
dna.met.chr21.filtered  <- readRDS("./data/dna.met.chr21.filtered.RDS")
gene.exp.chr21.filtered <- readRDS("./data/gene.exp.chr21.filtered.RDS")
dim (dna.met.chr21.filtered)  # 72 38
dim (gene.exp.chr21.filtered) # 119 38
n.reps <- 100
set.seed (7262020)
row.met <- sample (
1:nrow(dna.met.chr21.filtered),
size = n.reps,
replace = TRUE
)
set.seed (7262021)
row.tf <- sample (
1:nrow(gene.exp.chr21.filtered),
size = n.reps,
replace = TRUE
)
row.met
parms.beta.tf <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
res.all <- data.frame (matrix(nrow = 0, ncol = 9))
p<-1
r<-1
met.tf <- data.frame(
met    = dna.met.chr21.filtered [row.met[r] ,] %>% as.numeric,
rna.tf = gene.exp.chr21.filtered[row.tf[r]  ,] %>% as.numeric
)
View(met.tf)
set.seed (7262021)
row.tf <- sample (
1:nrow(gene.exp.chr21.filtered),
size = n.reps,
replace = TRUE
)
row.tf
set.seed (3252021)
row.target <- sample (
1:nrow(gene.exp.chr21.filtered),
size = n.reps,
replace = TRUE
)
row.target <- sample (
1:nrow(gene.exp.chr21.filtered),
size = n.reps,
replace = TRUE
)
row.target
r
row.met[r]
row.tf[r]
row.target[r]
met        <- dna.met.chr21.filtered [row.met[r] ,] %>% as.numeric %>% sort
rna.tf     <- gene.exp.chr21.filtered[row.tf[r]  ,] %>% as.numeric
met        <- dna.met.chr21.filtered [row.met[r] ,] %>% as.numeric %>% sort
rna.tf     <- gene.exp.chr21.filtered[row.tf[r]  ,] %>% as.numeric %>% sort
rna.target <- gene.exp.chr21.filtered[row.target[r]  ,] %>% as.numeric %>% sort
met.tf.target <- data.frame (
met = met_ordered,
rna.tf = tf_ordered,
ran.target = target_ordered
)
met_ordered    <- dna.met.chr21.filtered [row.met[r] ,] %>% as.numeric %>% sort
tf_ordered     <- gene.exp.chr21.filtered[row.tf[r]  ,] %>% as.numeric %>% sort
target_ordered <- gene.exp.chr21.filtered[row.target[r]  ,] %>% as.numeric %>% sort
met.tf.target <- data.frame (
met = met_ordered,
rna.tf = tf_ordered,
ran.target = target_ordered
)
View(met.tf.target)
r
p
set.seed (7262020 + p)
row.met <- sample (
1:nrow(dna.met.chr21.filtered),
size = n.reps,
replace = TRUE
)
set.seed (7262021 + p)
row.tf <- sample (
1:nrow(gene.exp.chr21.filtered),
size = n.reps,
replace = TRUE
)
set.seed (3252021 + p)
row.target <- sample (
1:nrow(gene.exp.chr21.filtered),
size = n.reps,
replace = TRUE
)
met.tf <- data.frame(
met    = dna.met.chr21.filtered [row.met[r] ,] %>% as.numeric,
rna.tf = gene.exp.chr21.filtered[row.tf[r]  ,] %>% as.numeric
)
sim.data <- dataGen (
data = met.tf,
mu = 10.59, theta = 17.78,
beta.tf = parms.beta.tf [p]
)
source ("./FUNCTION_dataGen_v3.R")
source ("./FUNCTION_fit_models_v3.R")
source ("./FUNCTION_fit_models_v2.R")
met.tf <- data.frame(
met    = dna.met.chr21.filtered [row.met[r] ,] %>% as.numeric,
rna.tf = gene.exp.chr21.filtered[row.tf[r]  ,] %>% as.numeric
)
sim.data <- dataGen (
data = met.tf,
mu = 10.59, theta = 17.78,
beta.tf = parms.beta.tf [p]
)
View(sim.data)
View(sim.data)
dataGen_confounding <- function (data, mu, theta, beta.met, beta.tf){
quant.met <-  quantile(data$met,na.rm = TRUE)
q2.met <- quant.met [2]
q4.met <- quant.met [4]
# variable for met.grp
data$low.met  <- ifelse (data$met < q2.met, 1, 0)
data$high.met <- ifelse (data$met > q4.met, 1, 0)
data$met.grp <- ifelse (data$low.met ==1 , "low",
ifelse(data$high.met == 1, "high", NA) )
data
}
sim.data.trueNeg <- dataGen_confounding(
data = met.tf.target,
mu = 10.59, theta = 17.78,
beta.tf = parms.beta.tf [p]
)
View(sim.data.trueNeg)
res.rlm.cont   <- fit.rlm.cont (sim.data.trueNeg)
View(res.rlm.cont)
res.rlm.binary <- fit.rlm.binary (sim.data.trueNeg)
View(sim.data.trueNeg)
str(sim.data.trueNeg)
data <- sim.data
lm (
rna.target ~ met.grp + rna.tf + rna.tf * met.grp,
data = data
) %>% summary
str(data)
str(sim.data.trueNeg)
data <- sim.data.trueNeg
lm (
rna.target ~ met.grp + rna.tf + rna.tf * met.grp,
data = data
) %>% summary
lm (
rna.target ~ met.grp + rna.tf + rna.tf * met.grp,
data = data
) %>% summary %>% coef
lm (
rna.target ~ met.grp + rna.tf + rna.tf * met.grp,
data = data
) %>% summary %>% coef %>% data.frame
data.frame (
model = "lm.binary",
pval  = res.lm.binary ["met.grplow:rna.tf", "Pr...t.." ]
)
res.lm.binary <- lm (
rna.target ~ met.grp + rna.tf + rna.tf * met.grp,
data = data
) %>% summary %>% coef %>% data.frame
data.frame (
model = "lm.binary",
pval  = res.lm.binary ["met.grplow:rna.tf", "Pr...t.." ]
)
fit.lm.binary <- function (data){
res.lm.binary <- lm (
rna.target ~ met.grp + rna.tf + rna.tf * met.grp,
data = data
) %>% summary %>% coef %>% data.frame
data.frame (
model = "lm.binary",
pval  = res.lm.binary ["met.grplow:rna.tf", "Pr...t.." ]
)
}
res.rlm.binary <- fit.rlm.binary (sim.data.trueNeg)
fit.lm.binary <- function (data){
data <- data[!is.na(data$met.grp) ,]
res.lm.binary <- lm (
rna.target ~ met.grp + rna.tf + rna.tf * met.grp,
data = data
) %>% summary %>% coef %>% data.frame
data.frame (
model = "lm.binary",
pval  = res.lm.binary ["met.grplow:rna.tf", "Pr...t.." ]
)
}
res.rlm.binary <- fit.rlm.binary (sim.data.trueNeg)
data <- data[!is.na(data$met.grp) ,]
res.rlm.binary <- rlm (
rna.target ~ met.grp + rna.tf + rna.tf * met.grp,
data = data,
psi = psi.bisquare,
maxit = 1000) %>% summary %>% coef %>% data.frame
View(data)
str(data)
rlm (
rna.target ~ met.grp + rna.tf + rna.tf * met.grp,
data = data,
psi = psi.bisquare,
maxit = 1000)
data <- sim.data.trueNeg
data <- data[complete.cases(data) ,]
View(data)
rlm (
rna.target ~ met.grp + rna.tf + rna.tf * met.grp,
data = data,
psi = psi.bisquare,
maxit = 1000)
data
data$met.grp <- factor(data$met.grp)
rlm (
rna.target ~ met.grp + rna.tf + rna.tf * met.grp,
data = data,
psi = psi.bisquare,
maxit = 1000)
data
rlm (
rna.target ~ met.grp + rna.tf + rna.tf * met.grp,
data = data,
psi = psi.bisquare,
maxit = 1000)
str(data)
saveRDS (data, "data.RDS")
res.main       <- fit.main.effect.models.met (sim.data.trueNeg)
View(sim.data.trueNeg)
saveRDS(sim.data.trueNeg, "sim.data.trueNeg.RDS")
View(sim.data.trueNeg)
